// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pastinha.Base.Database;

#nullable disable

namespace Pastinha.Base.Migrations
{
    [DbContext(typeof(PastinhaContext))]
    [Migration("20250930133957_V5")]
    partial class V5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Pastinha.Base.Model.DataFileProcessed.CountDataFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountImage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountOtherFormat")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountPDF")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountSendPlatform")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateProcess")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DateProcess")
                        .IsDescending();

                    b.ToTable("CountDataFiles");
                });

            modelBuilder.Entity("Pastinha.Base.Model.Employee.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomFun")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumCad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumEmp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SitAfa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipCol")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NumEmp", "TipCol", "NumCad")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Pastinha.Base.Model.FileProcessed.FileProcessed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AmountProcessed")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateProcessed")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomDoc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumCad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumEmp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipCol")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NumEmp", "TipCol", "NumCad", "NomDoc", "DateProcessed")
                        .IsUnique();

                    b.ToTable("FileProcesseds");
                });

            modelBuilder.Entity("Pastinha.Base.Model.Fired.StatusFired", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CodeStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StatusFireds");
                });

            modelBuilder.Entity("Pastinha.Base.Model.Folder.FolderOfflinePastinhaSenior", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOffline")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PathOffline")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FoldersOffline");
                });

            modelBuilder.Entity("Pastinha.Base.Model.Folder.FolderPastinhaSenior", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DaysDelete")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PathError")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PathInput")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PathLog")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PathOutput")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FoldersPastinha");
                });

            modelBuilder.Entity("Pastinha.Base.Model.FromTo.FromToCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FromCompany")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToCompany")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FromCompany", "ToCompany")
                        .IsUnique();

                    b.ToTable("FromToCompanies");
                });

            modelBuilder.Entity("Pastinha.Base.Model.FromTo.FromToEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FromEmployee")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToEmployee")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FromEmployee", "ToEmployee")
                        .IsUnique();

                    b.ToTable("FromToEmployees");
                });

            modelBuilder.Entity("Pastinha.Base.Model.FromTo.FromToType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FromType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FromType", "ToType")
                        .IsUnique();

                    b.ToTable("FromToTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
